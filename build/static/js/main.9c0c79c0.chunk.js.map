{"version":3,"sources":["emotion/EmotionTheme.jsx","emotion/GlobalStyles.jsx","App.js","reportWebVitals.js","index.js"],"names":["theme","mediaTablet","mediaDesktop","flex","center","display","alignItems","justifyContent","between","color","transition","short","EmotionTheme","children","GlobalStyles","styles","css","normalize","AppStyled","styled","div","App","className","action","method","type","name","placeholder","value","required","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAGMA,EAAQ,CACZC,YAAa,2BACbC,aAAc,4BAEdC,KAAM,CACJC,OAAQ,CACNC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,QAAS,CACPH,QAAS,OACTC,WAAY,SACZC,eAAgB,kBAGpBE,MAAO,GAEPC,WAAY,CACVC,MAAO,CACLD,WAAY,mBAOHE,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,cAAC,IAAD,CAAeb,MAAOA,EAAtB,SAA8Ba,K,goDCxBrE,IA2FeC,EA3FM,kBACnB,cAAC,IAAD,CACEC,OAAQC,YAAF,IACFC,Q,qvDC8CR,IAAMC,E,MAAYC,EAAOC,IAAV,KAuCT,qBAAGpB,MAAkBG,KAAKC,UAY1B,qBAAGJ,MAAkBG,KAAKC,UAmDjBiB,EAvJf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,eAACH,EAAD,WACE,kDACA,qBAAII,UAAU,YAAd,UACE,6BACE,uBAAMC,OAAO,yBAAyBC,OAAO,OAA7C,UACE,mDACA,4BACE,iEAEF,uBAAOC,KAAK,OAAOC,KAAK,WAAWC,YAAY,aAC/C,uBAAOF,KAAK,SAASG,MAAM,gBAI/B,6BACE,uBAAML,OAAO,oBAAoBC,OAAO,OAAxC,UACE,+CACA,4BACE,4DAEF,uBAAOC,KAAK,OAAOC,KAAK,SAASG,UAAQ,EAACF,YAAY,YACtD,uBAAOF,KAAK,OAAOC,KAAK,cAAcG,UAAQ,EAACF,YAAY,iBAC3D,uBAAOF,KAAK,OAAOC,KAAK,WAAWG,UAAQ,EAACF,YAAY,sBACxD,uBAAOF,KAAK,OAAOC,KAAK,OAAOC,YAAY,sBAC3C,uBAAOF,KAAK,SAASG,MAAM,mBAKjC,8BACE,0DAAiC,IACjC,sFAAoE,OAGtE,8BACE,mCADF,gBAC4B,oCAD5B,iBAGA,8BACE,qCADF,KACe,mCADf,0BAC+C,sCAD/C,sBCjCOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c0c79c0.chunk.js","sourcesContent":["import React from 'react';\nimport { ThemeProvider } from '@emotion/react';\n\nconst theme = {\n  mediaTablet: '@media(min-width: 768px)',\n  mediaDesktop: '@media(min-width: 1280px)',\n\n  flex: {\n    center: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    between: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n  },\n  color: {\n  },\n  transition: {\n    short: {\n      transition: 'all 0.3s ease',\n    },\n  },\n};\n\nconst EmotionTheme = ({ children }) => <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n\nexport default EmotionTheme;\n","import { Global, css } from '@emotion/react';\nimport normalize from 'normalize.css';\nimport React from 'react';\n\nconst GlobalStyles = () => (\n  <Global\n    styles={css`\n      ${normalize}\n      html,\n      body {\n        padding: 0;\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\n          'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        font-size: 14px;\n        line-height: 1.2;\n        font-weight: 400;\n      }\n\n      code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n      }\n\n      img {\n        max-width: 100%;\n      }\n      footer,\n      header,\n      body {\n        font-size: 14px;\n        line-height: 1.4em;\n      }\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        margin: 0;\n        padding: 0;\n      }\n\n      a {\n        text-decoration: none;\n        color: inherit;\n        margin: 0;\n      }\n\n      ul,\n      li,\n      ol {\n        margin: 0;\n        padding: 0;\n        list-style-type: none;\n      }\n\n      dl,\n      dd {\n        margin-bottom: 0;\n      }\n\n      figure {\n        margin: 0;\n      }\n\n      button {\n        padding: 0;\n      }\n\n      img {\n        max-width: 100%;\n        height: auto;\n        display: block;\n      }\n\n      p {\n        margin: 0;\n      }\n\n      .visually-hidden {\n        position: absolute;\n        clip: rect(0 0 0 0);\n        width: 1px;\n        height: 1px;\n        margin: -1px;\n      }\n\n      .inactive {\n        pointer-events: none;\n      }\n    `}\n  />\n);\nexport default GlobalStyles;\n","import EmotionTheme from './emotion/EmotionTheme';\nimport GlobalStyles from './emotion/GlobalStyles';\nimport styled from '@emotion/styled';\n\nfunction App() {\n  return (\n    <EmotionTheme>\n      <GlobalStyles />\n      <AppStyled>\n        <h1>Exercise tracker</h1>\n        <ul className=\"form-list\">\n          <li>\n            <form action=\"/api/exercise/new-user\" method=\"post\">\n              <h2>Create a New User</h2>\n              <p>\n                <code>POST /api/exercise/new-user</code>\n              </p>\n              <input type=\"text\" name=\"username\" placeholder=\"username\" />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </li>\n\n          <li>\n            <form action=\"/api/exercise/add\" method=\"post\">\n              <h2>Add exercises</h2>\n              <p>\n                <code>POST /api/exercise/add</code>\n              </p>\n              <input type=\"text\" name=\"userId\" required placeholder=\"userId*\" />\n              <input type=\"text\" name=\"description\" required placeholder=\"description*\" />\n              <input type=\"text\" name=\"duration\" required placeholder=\"duration *(mins.)\" />\n              <input type=\"text\" name=\"date\" placeholder=\"date (yyyy-mm-dd)\" />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </li>\n        </ul>\n\n        <p>\n          <b>GET users's exercise log:</b>{' '}\n          <code>{`GET /api/exercise/log?{userId}[&from][&to][&limit]`}</code>{' '}\n        </p>\n\n        <p>\n          <b>{`{}`}</b> = required, <b>[ ]</b> = optional\n        </p>\n        <p>\n          <b>from</b>, <b>to</b> = dates (yyyy-mm-dd); <b>limit</b> = number\n        </p>\n      </AppStyled>\n    </EmotionTheme>\n  );\n}\n\nconst AppStyled = styled.div`\n  text-align: center;\n  font-size: 16px;\n  line-height: 1.4;\n  padding: 20px;\n  font-family: Roboto;\n  color: #303a52;\n  background-color: #f0f0f0;\n  width: 100vw;\n  height: 100%;\n  min-height: 100vh;\n  box-sizing: border-box;\n\n  .form-list {\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n      max-width: 100%;\n    }\n  }\n\n  hr {\n    color: #303a52;\n  }\n\n  h1,\n  h2 {\n    margin: 0.5em 0;\n  }\n\n  code {\n    background-color: #c5e3f6;\n    border-radius: 3px;\n    margin-bottom: 1em;\n    display: inline-block;\n  }\n\n  footer {\n    ${({ theme }) => theme.flex.center};\n    padding-top: 2em;\n  }\n\n  a {\n    color: #3d5af1;\n    text-decoration: underline;\n    margin-bottom: 0.3em;\n    display: inline-block;\n  }\n\n  form {\n    ${({ theme }) => theme.flex.center};\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    flex-direction: column;\n    border: 1px solid #303a52;\n    border-radius: 10px;\n    max-width: 340px;\n    margin: 0 auto;\n    padding: 2em;\n    margin-right: 1em;\n    margin-bottom: 2em;\n    min-width: 280px;\n    box-sizing: border-box;\n\n    span {\n      font-weight: 500;\n    }\n\n    input[type='submit'] {\n      text-transform: uppercase;\n      padding: 0.3em;\n      width: 100%;\n      background-color: #303a52;\n      color: white;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n    }\n\n    input[type='text'] {\n      padding: 10px 20px;\n      font-size: 12px;\n      flex-grow: 1;\n      margin: 10px 50px;\n      border: 2px solid #a1eafb;\n      border-radius: 5px;\n    }\n  }\n\n  @media (max-width: 500px) {\n    form {\n      margin-right: 0;\n\n      input[type='text'] {\n        margin: 10px 0;\n      }\n    }\n  }\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}